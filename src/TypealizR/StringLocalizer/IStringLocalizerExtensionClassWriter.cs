using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace TypealizR.StringLocalizer;
internal class IStringLocalizerExtensionClassWriter
{
	private readonly ClassModel model;
	private readonly IEnumerable<IStringLocalizerExtensionMethodWriter> methodWriters;

	public IStringLocalizerExtensionClassWriter(ClassModel model)
    {
		this.model = model;

		methodWriters = model.Methods
			.Select(x => new IStringLocalizerExtensionMethodWriter(x))
			.ToArray();
	}

	public string FileName => $"IStringLocalizerExtensions_{model.Target.FullName}.g.cs";

	public string ToCSharp() => $@"
// <auto-generated/>
{model.Usings.Select(x => $"using {x};").ToMultiline()}
namespace Microsoft.Extensions.Localization {{

    {_.GeneratedCodeAttribute}
    [DebuggerStepThrough]
    {model.Visibility} static partial class IStringLocalizerExtensions_{model.Target.FullNameForExtensionsClass}
    {{
    {methodWriters.Select(x => x.ToCSharp()).ToMultiline()}
    }}
}}";
}
