using System;using System.Collections.Generic;using System.Linq;using System.Text;using Microsoft.CodeAnalysis.CSharp.Syntax;using TypealizR.Extensions;namespace TypealizR.Core;internal class MemberName{    private readonly string name;    public MemberName(string value)    {        var raw = value.RemoveAndReplaceDuplicatesOf(" ", "_");        var temp = new string(            raw                .Trim('_')                .Where((x, i) => x.IsValidInIdentifier(i == 0))                .ToArray()        );        name = string.Join(" ",                temp.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)                    .Where(x => !string.IsNullOrEmpty(x))                )                .Replace("___", "__")                .Trim('_');    }    public static implicit operator string (MemberName that) => that.name;    public override string ToString() => name;}